language: cpp
sudo: false
notifications:
  slack:
    secure: F2nQIW6SiaGdw1LjuZOlgBu8rUVMllrDG/5bhmTQP7gyETfViFBjTsHQdTle6jtdb+LudleZaG7WhdEiVcKUa834rKqDk1UOt9p6bsmgbsBZBAaxmPh01iVFhKn3ML7JLjfr1YtH7MWJcsS60cNBrohXfVKfFzNgDqZEu/llr90=
cache:
  ccache: true
  directories:
  - "$HOME/.ccache"
env:
  global:
  - USE_CCACHE=1
  - CCACHE_COMPRESS=1
  - CCACHE_MAXSIZE=200M
  - CCACHE_CPP2=1
  - PYTHON_PACKAGES="pip pep8 cpp-coveralls"
matrix:
  include:
  - os: linux
    compiler: clang
    addons: &1
      apt:
        sources:
        - llvm-toolchain-precise-3.5
        - ubuntu-toolchain-r-test
        - boost-latest
        - george-edison55-precise-backports
        packages:
        - cmake
        - cmake-data
        - clang-3.5
        - libboost1.55-all-dev
        - gfortran
    env: CXX_COMPILER='clang++-3.5' C_COMPILER='clang-3.5' Fortran_COMPILER='gfortran'
      BUILD_TYPE='release'
  - os: linux
    compiler: clang
    addons: *1
    env: CXX_COMPILER='clang++-3.5' C_COMPILER='clang-3.5' Fortran_COMPILER='gfortran'
      BUILD_TYPE='debug'
  - os: linux
    compiler: clang
    addons: &2
      apt:
        sources:
        - llvm-toolchain-precise-3.6
        - ubuntu-toolchain-r-test
        - boost-latest
        - george-edison55-precise-backports
        packages:
        - cmake
        - cmake-data
        - clang-3.6
        - libboost1.55-all-dev
        - gfortran
    env: CXX_COMPILER='clang++-3.6' C_COMPILER='clang-3.6' Fortran_COMPILER='gfortran'
      BUILD_TYPE='release'
  - os: linux
    compiler: clang
    addons: *2
    env: CXX_COMPILER='clang++-3.6' C_COMPILER='clang-3.6' Fortran_COMPILER='gfortran'
      BUILD_TYPE='debug'
  - os: linux
    compiler: clang
    addons: &3
      apt:
        sources:
        - llvm-toolchain-precise-3.7
        - ubuntu-toolchain-r-test
        - boost-latest
        - george-edison55-precise-backports
        packages:
        - cmake
        - cmake-data
        - clang-3.7
        - libboost1.55-all-dev
        - gfortran
    env: CXX_COMPILER='clang++-3.7' C_COMPILER='clang-3.7' Fortran_COMPILER='gfortran'
      BUILD_TYPE='release'
  - os: linux
    compiler: clang
    addons: *3
    env: CXX_COMPILER='clang++-3.7' C_COMPILER='clang-3.7' Fortran_COMPILER='gfortran'
      BUILD_TYPE='debug'
  - os: linux
    compiler: clang
    addons: &4
      apt:
        sources:
        - llvm-toolchain-precise-3.8
        - ubuntu-toolchain-r-test
        - boost-latest
        - george-edison55-precise-backports
        packages:
        - cmake
        - cmake-data
        - clang-3.8
        - libboost1.55-all-dev
        - gfortran
    env: CXX_COMPILER='clang++-3.8' C_COMPILER='clang-3.8' Fortran_COMPILER='gfortran'
      BUILD_TYPE='release'
  - os: linux
    compiler: clang
    addons: *4
    env: CXX_COMPILER='clang++-3.8' C_COMPILER='clang-3.8' Fortran_COMPILER='gfortran'
      BUILD_TYPE='debug'
  - os: linux
    compiler: gcc
    addons: &5
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - boost-latest
        - george-edison55-precise-backports
        packages:
        - cmake
        - cmake-data
        - g++-4.6
        - gcc-4.6
        - libboost1.55-all-dev
        - gfortran-4.6
    env: CXX_COMPILER='g++-4.6' C_COMPILER='gcc-4.6' Fortran_COMPILER='gfortran-4.6'
      BUILD_TYPE='release'
  - os: linux
    compiler: gcc
    addons: *5
    env: CXX_COMPILER='g++-4.6' C_COMPILER='gcc-4.6' Fortran_COMPILER='gfortran-4.6'
      BUILD_TYPE='debug'
  - os: linux
    compiler: gcc
    addons: &6
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - boost-latest
        - george-edison55-precise-backports
        packages:
        - cmake
        - cmake-data
        - g++-4.7
        - gcc-4.7
        - libboost1.55-all-dev
        - gfortran-4.7
    env: CXX_COMPILER='g++-4.7' C_COMPILER='gcc-4.7' Fortran_COMPILER='gfortran-4.7'
      BUILD_TYPE='release'
  - os: linux
    compiler: gcc
    addons: *6
    env: CXX_COMPILER='g++-4.7' C_COMPILER='gcc-4.7' Fortran_COMPILER='gfortran-4.7'
      BUILD_TYPE='debug'
  - os: linux
    compiler: gcc
    addons: &7
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - boost-latest
        - george-edison55-precise-backports
        packages:
        - cmake
        - cmake-data
        - g++-4.8
        - gcc-4.8
        - libboost1.55-all-dev
        - gfortran-4.8
    env: CXX_COMPILER='g++-4.8' C_COMPILER='gcc-4.8' Fortran_COMPILER='gfortran-4.8'
      BUILD_TYPE='release'
  - os: linux
    compiler: gcc
    addons: *7
    env: CXX_COMPILER='g++-4.8' C_COMPILER='gcc-4.8' Fortran_COMPILER='gfortran-4.8'
      BUILD_TYPE='debug'
  - os: linux
    compiler: gcc
    addons: &8
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - boost-latest
        - george-edison55-precise-backports
        packages:
        - cmake
        - cmake-data
        - g++-4.9
        - gcc-4.9
        - libboost1.55-all-dev
        - gfortran-4.9
    env: CXX_COMPILER='g++-4.9' C_COMPILER='gcc-4.9' Fortran_COMPILER='gfortran-4.9'
      BUILD_TYPE='release'
  - os: linux
    compiler: gcc
    addons: *8
    env: CXX_COMPILER='g++-4.9' C_COMPILER='gcc-4.9' Fortran_COMPILER='gfortran-4.9'
      BUILD_TYPE='debug'
  - os: linux
    compiler: gcc
    addons: &9
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - boost-latest
        - george-edison55-precise-backports
        packages:
        - cmake
        - cmake-data
        - g++-5
        - gcc-5
        - libboost1.55-all-dev
        - gfortran-5
    env: CXX_COMPILER='g++-5' C_COMPILER='gcc-5' Fortran_COMPILER='gfortran-5' BUILD_TYPE='release'
  - os: linux
    compiler: gcc
    addons: *9
    env: CXX_COMPILER='g++-5' C_COMPILER='gcc-5' Fortran_COMPILER='gfortran-5' BUILD_TYPE='debug'
  - os: osx
    osx_image: xcode6.4
    compiler: clang
    env: CXX_COMPILER='clang++' C_COMPILER='clang' Fortran_COMPILER='gfortran' BUILD_TYPE='debug'
  - os: osx
    osx_image: xcode6.4
    compiler: clang
    env: CXX_COMPILER='clang++' C_COMPILER='clang' Fortran_COMPILER='gfortran' BUILD_TYPE='release'
  - os: osx
    osx_image: xcode7
    compiler: clang
    env: CXX_COMPILER='clang++' C_COMPILER='clang' Fortran_COMPILER='gfortran' BUILD_TYPE='debug'
  - os: osx
    osx_image: xcode7
    compiler: clang
    env: CXX_COMPILER='clang++' C_COMPILER='clang' Fortran_COMPILER='gfortran' BUILD_TYPE='release'
  - os: osx
    osx_image: xcode6.4
    compiler: gcc
    env: CXX_COMPILER='g++-5' C_COMPILER='gcc-5' Fortran_COMPILER='gfortran' BUILD_TYPE='debug'
  - os: osx
    osx_image: xcode6.4
    compiler: gcc
    env: CXX_COMPILER='g++-5' C_COMPILER='gcc-5' Fortran_COMPILER='gfortran' BUILD_TYPE='release'
  - os: osx
    osx_image: xcode7
    compiler: gcc
    env: CXX_COMPILER='g++-5' C_COMPILER='gcc-5' Fortran_COMPILER='gfortran' BUILD_TYPE='debug'
  - os: osx
    osx_image: xcode7
    compiler: gcc
    env: CXX_COMPILER='g++-5' C_COMPILER='gcc-5' Fortran_COMPILER='gfortran' BUILD_TYPE='release'
  - os: linux
    compiler: gcc
    addons: *9
    env: CXX_COMPILER='g++-5' C_COMPILER='gcc-5' Fortran_COMPILER='gfortran-5' BUILD_TYPE='debug'
      COVERAGE=true
install:
- DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
- mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}
- |
  if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
    pip install --upgrade ${PYTHON_PACKAGES} --user `whoami`
  elif [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
    brew install cmake boost python gcc
    pip install --upgrade ${PYTHON_PACKAGES}
  fi
before_script:
- cd ${TRAVIS_BUILD_DIR}
- export CXX=${CXX_COMPILER}
- ${CXX_COMPILER} --version
- export CC=${C_COMPILER}
- ${C_COMPILER} --version
- export FC=${Fortran_COMPILER}
- ${Fortran_COMPILER} --version
- |
  if [[ "${COVERAGE}" = true ]]; then
    python setup.py --cxx=${CXX_COMPILER} --cc=${C_COMPILER} --fc=${Fortran_COMPILER} --type=${BUILD_TYPE} --cmake-options='-Hprojects/CMake -DENABLE_FORTRAN_API=ON' --coverage
  else
    python setup.py --cxx=${CXX_COMPILER} --cc=${C_COMPILER} --fc=${Fortran_COMPILER} --type=${BUILD_TYPE} --cmake-options='-Hprojects/CMake -DENABLE_FORTRAN_API=ON'
  fi
- cd build
script:
- VERBOSE=1 make -j 2
- ctest -V -j 2
after_success:
- |
  if [[ "${COVERAGE}" = true ]]; then
    coveralls --root .. -E ".*external.*" -E ".*CMakeFiles.*" -E ".*generated.*" -E ".*tests*" -E ".*tools.*" -E ".*cmake*" -E ".*doc*" -E ".*examples*" || echo 'coveralls upload failed.'
  fi
